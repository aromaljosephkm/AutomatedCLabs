$(document).ready(function(){var skillDict={"flask":"Flask","html":"HTML","mysql":"MySQL","python":"Python","computationalThinking":"Computational Thinking","java":"Java","javascript":"Javascript","dsAndAlgo":"Data structure & Algorithm","php":"PHP","css":"CSS","mongodb":"MongoDB"};var color=d3.scale.ordinal().range(["#09e176"]);let path=window.location.pathname;let profileURL=path.split("/").pop();var margin={top:100,right:100,bottom:100,left:100},width=Math.min(500,window.innerWidth-10)-margin.left-margin.right,height=Math.min(width,window.innerHeight-margin.top-margin.bottom-20);var microarcChartFlag=0;let reqdata={};reqdata.requestType="onload";reqdata.profileURL=profileURL;authorize.ajax(reqdata,'microarcScores',function(resData){resData=JSON.parse(resData);let response=resData["microarc"];let length=response.length
var temp=[];for(let i=0;i<length;i++){if(response[i].score!=-1){microarcChartFlag=1;temp.push({"axis":skillDict[response[i].name],"value":response[i].score.toFixed(2)});}}
var data=[];temp.sort(dynamicSort("value")).reverse();temp.length=temp.length>10?10:temp.length;data=[temp];let radarChartOptions={w:width,h:height,margin:margin,maxValue:1,levels:5,roundStrokes:true,color:color};if(microarcChartFlag){RadarChart("#arcChart",data,radarChartOptions);$(".micro-arc-graph").show();}else{$(".micro-arc-graph").css("display","none");}
data=resData["codekata"]
var ckChartFlag=0;var valid=data["validSubmissions"];var temp=[];var overall=data["overallData"],overAllIndexed=[];for(var i=0;i<overall.length;i++){overAllIndexed[overall[i]["_id"]]=overall[i]["count"];}
for(var key in valid){ckChartFlag=1;temp.push({"axis":key,"value":(valid[key]["count"]/overAllIndexed[key]).toFixed(2)});}
temp.sort(dynamicSort("value")).reverse();temp.length=temp.length>10?10:temp.length;data=[];data=[temp];if(ckChartFlag){RadarChart("#codekataChart",data,radarChartOptions);$(".ckGraph").show();}else{$(".ckGraph").css("display","none");}});});function dynamicSort(property){var sortOrder=1;if(property[0]==="-"){sortOrder=-1;property=property.substr(1);}
return function(a,b){var result=(a[property]<b[property])?-1:(a[property]>b[property])?1:0;return result*sortOrder;}}