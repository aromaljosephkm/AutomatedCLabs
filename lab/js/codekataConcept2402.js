var search=new URLSearchParams(document.location.search.substring(1));$(document).ready(function(){var conceptTags=search.get("concept");if(!conceptTags){window.location.href="code-kata.html";}
codekataFetchQuestion(conceptTags,"new");});function codekataFetchQuestion(conceptTags,type,Qid){let data={};data.concept=conceptTags;data.type=type;data.qid=Qid;data.hash="";let codekataObj=new Codekata();var promise=new Promise(function(resolve,reject){codekataObj.fetchQuestion(data,resolve);}).then(function(result){var Qid=authorize.getSession(conceptTags+"currentQid");let QuestionResults={};editor.on("change",function(){value=editor.getValue();QuestionResults=value;localStorage.setItem(conceptTags+"SourceCode",QuestionResults);authorize.setSession("codekataInteracted","true");});document.querySelector(".ace_editor").addEventListener("paste",function(e){let concept=search.get("concept");let currentQid=authorize.getSession(concept+"currentQid");let questionObject=authorize.getSession(concept+currentQid);questionObject=JSON.parse(questionObject);if(questionObject&&questionObject.isEditorRestricted){e.stopPropagation();e.preventDefault();}},true);if(type==="skip"||type==="next"){authorize.clearSession(conceptTags+"SourceCode");editor.setValue("");}else{let userCode=authorize.getSession(conceptTags+"SourceCode");if(userCode){editor.setValue(userCode);}}
let codekataObj=new codekataOperations();codekataObj.renderComplierLanguages();codekataObj.renderUserSubmission();codekataObj.updateSettings();});}
$(document).on("submit","#gitSubmit",function(event){event.preventDefault();let codekataObj=new Codekata();$("#ghgithuburl").removeClass("is-invalid");$("#ghLanguageSelect").removeClass("is-invalid");let gitLanguage=$("#ghLanguageSelect option:selected").html();let githuburl=$("#ghgithuburl").val();let positiveInput=$("#pInput").val();let positiveOutput=$("#pOutput").val();let negativeInput=$("#nInput").val();let negativeOutput=$("#nOutput").val();let errorMessage=["please enter valid url","please enter valid github url","Given github url does not exist , should have filename and extension<br>Example :<strong> https://github.com/guvi/new-repo/blob/master/filename.java</strong>","Given language and file extension does not match, Please select the language from the suggestions"];if(githuburl){let ValdiateUrl=codekataObj.validateGithubUrl(githuburl,gitLanguage);if(ValdiateUrl<4){$("#ghHelp").addClass("text-danger");$("#ghHelp").html(errorMessage[ValdiateUrl]);if(ValdiateUrl===3){$("#ghgithuburl").addClass("is-invalid");$("#ghLanguageSelect").addClass("is-invalid");}else if(ValdiateUrl===2){$("#ghgithuburl").addClass("is-invalid");}else if(ValdiateUrl===1){$("#ghgithuburl").addClass("is-invalid");}else if(ValdiateUrl===0){$("#ghgithuburl").addClass("is-invalid");}}else{var url,status;var subUrl=githuburl.split("/");var contents=githuburl.split("master");var urlLength=subUrl.length;var extn,linecount,user_src;var uname=subUrl[3];var repo=subUrl[4];var content=subUrl[urlLength-1];var check=content.split(".");url="https://api.github.com/repos/"+
uname+
"/"+
repo+
"/contents"+
contents[1];let git_json={url:url,access_token:"acbe86fe2ef6e073616c9aa007708891ad15fc24"};authorize.githubAjaxcall(git_json,function(response){if(response!="404"){status=response;var program=response.content;program=atob(program);let line=program.split("\n");let fileExt=content.split(".").pop();let lineCount=line.length-1;$("#github .modal-title").html("Hello there check your source code");$("#github .modal-body").html("<pre></pre>");$("#github .modal-body > pre").text(program);$("#github").modal("show");}else{$("#ghHelp").addClass("text-danger");$("#ghHelp").html(errorMessage[1]);}});}}});$(document).on("click","#codeSkip",function(e){e.preventDefault();var concept=search.get("concept");let Qid=authorize.getSession(concept+"currentQid");let attendedQuestio=authorize.getSession(concept+"currentQid");var attendedQuestionOrder=JSON.parse(authorize.getSession(concept+"order"));attendedQuestionOrder.pop();authorize.clearSession(concept+"currentQid");authorize.clearSession(concept+Qid);codekataFetchQuestion(concept,"skip");});$(document).on("click","#codeNext",function(event){event.preventDefault();var concept=search.get("concept");var Qid=authorize.getSession(concept+"currentQid");var nextRenderQid;let lengthOfAQ=parseInt(authorize.getSession(concept+"AttendedQuestionLength"));let lengthOfTQ=parseInt(authorize.getSession(concept+"TotalQuestionLength"));let attendedQuestionOrder=JSON.parse(authorize.getSession(concept+"order"));let qindex=attendedQuestionOrder.indexOf(parseInt(Qid));let currentQidPosition=parseInt(qindex+1);let nextdisableCheck=parseInt(currentQidPosition+1);if(nextdisableCheck===lengthOfTQ){$("#codeNext").addClass("disabled");}
if(typeof attendedQuestionOrder[currentQidPosition]==="undefined"){if(currentQidPosition===lengthOfTQ){nextRenderQid=attendedQuestionOrder[0];}else{let nextqidPosition=parseInt(currentQidPosition+1);authorize.clearSession(concept+"currentQid");authorize.clearSession(concept+Qid);codekataFetchQuestion(concept,"skip");}}else{nextRenderQid=attendedQuestionOrder[currentQidPosition];authorize.clearSession(concept+"currentQid");authorize.clearSession(concept+Qid);codekataFetchQuestion(concept,"qid",nextRenderQid);}
$("#codePre").removeClass("disabled");});$(document).on("click","#codePre",function(event){event.preventDefault();let concept=search.get("concept");let Qid=authorize.getSession(concept+"currentQid");let qOrder=authorize.getSession(concept+"order");if(qOrder){authorize.clearSession(concept+"currentQid");authorize.clearSession(concept+Qid);let questionOrder=JSON.parse(qOrder);let currentIndex=parseInt(questionOrder.indexOf(parseInt(Qid)));let preQuestionIndex=parseInt(currentIndex-1);if(preQuestionIndex==0){$("#codePre").addClass("disabled");let fetchCurrentQid=questionOrder[preQuestionIndex];codekataFetchQuestion(concept,"qid",fetchCurrentQid);}else if(preQuestionIndex>=1){$("#codeNext").removeClass("disabled");let fetchCurrentQid=questionOrder[preQuestionIndex];codekataFetchQuestion(concept,"qid",fetchCurrentQid);}else{}
$("#codePre").attr("disabled",false);}else{$("#codePre").addClass("disabled");}});$(document).on("click",".question-number",function(){let concept=search.get("concept");let qOrder=authorize.getSession(concept+"order");let Qid=authorize.getSession(concept+"currentQid");let currentQid=Number($(this).data("qid"));if(qOrder){let questionOrder=JSON.parse(qOrder);let currentIndex=questionOrder.indexOf(currentQid);(currentIndex===0)?$("#codePre").addClass("disabled"):$("#codePre").removeClass("disabled",false)
authorize.clearSession(concept+"currentQid");authorize.clearSession(concept+Qid);codekataFetchQuestion(concept,"qid",currentQid);$("#allQuestionsModal").modal("hide");}});