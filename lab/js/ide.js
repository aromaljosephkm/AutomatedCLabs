class Ide{renderComplierLanguages(selectedLanguage){try{let editorModeId=$("#languageSelect");let availableLanguages=["BASH","BASIC","C","CLOJURE","CRYSTAL","C++","C#","ELIXIR","ERLANG","GO","HASKELL","INSECT","JAVA","JAVA 8","JAVASCRIPT","OCAML","OCTAVE","PASCAL","PYTHON 2","PYTHON 3","RUBY","RUST"];let languageData="";for(let itr=0;itr<availableLanguages.length;itr++){let languageValue=this.getValue(availableLanguages[itr]);if(selectedLanguage&&selectedLanguage===languageValue){languageData+="<option value='"+languageValue+"' selected>"+availableLanguages[itr]+"</option>"}
else{languageData+="<option value='"+languageValue+"'>"+availableLanguages[itr]+"</option>"}}
editorModeId.html(languageData);}
catch(error){}}
getMode(language){let modeList={bash:"sh",c:"c_cpp",clojure:"clojure",crystal:"crystal",cpp:"c_cpp",csharp:"csharp",elixir:"elixir",erlang:"erlang",go:"golang",haskell:"haskell",java:"java",java8:"java",javascript:"javascript",ocaml:"ocaml",pascal:"pascal",python:"python",python3:"python",ruby:"ruby",rust:"rust"};return modeList[language]?modeList[language]:"text";}
getCompilerId(language){var language_name={'c':'C','cpp':'CPP14','js':'JAVASCRIPT','pl':'PERL','php':'PHP','py':'PY2','py3':'PY3','cs':'CS','rb':'RUBY',"java":"JAVA","sh":"BASH","scala":"SCALA","go":"GO","m":"OBJC","java8":"JAVA8",'javascript':'JAVASCRIPT',"javascript_en":"JAVASCRIPT","python_en":"PY3","BASH":"BASH","C":"C","C++":"CPP14","C#":"CS","GO":"GO","JAVA":"JAVA","JAVA 8":"JAVA8","JAVASCRIPT":"JAVASCRIPT","OBJECTIVE C":"OBJC","PERL":"PERL","PHP":"PHP","PYTHON 2":"PY2","PYTHON 3":"PY3","RUBY":"RUBY","SCALA":"SCALA","java_en":"JAVA","java_telugu":"JAVA","python":"PY3","python_ar":"PY3","python_hi":"PY3","BASIC":3,"CLOJURE":18,"CRYSTAL":19,"ELIXIR":20,"ERLANG":21,"HASKELL":23,"INSECT":25,"OCAML":31,"OCTAVE":32,"PASCAL":33,"RUST":42};return language_name[language];}
getValue(label){let valueList={BASH:"bash",BASIC:"basic",C:"c",CLOJURE:"clojure",CRYSTAL:"crystal","C++":"cpp","C#":"csharp",ELIXIR:"elixir",GO:"go",HASKELL:"haskell",INSECT:"insect",JAVA:"java","JAVA 8":"java8",JAVASCRIPT:"javascript",OCAML:"ocaml",OCTAVE:"octave",PASCAL:"pascal","PYTHON 2":"python","PYTHON 3":"python3",RUBY:"ruby",RUST:"rust"};return valueList[label]?valueList[label]:"UNKNOWN";}
updateSettings(){let currentMode=this.getMode($("#languageSelect").val());let fontSize=$("#editor-font-size").val();let selectedTheme=$("input[type=radio][name=theme]:checked").val();let wrapEnabled=$("#codeWrap").is(":checked");let showGutter=$("#showGutter").is(":checked");let autoCompletionEnabled=$("#autoCompletion").is(":checked");let lineNumberEnabled=$("#lineNumber").is(":checked");import("https://unpkg.com/ace-builds@1.4.8/src-min-noconflict/mode-"+currentMode+".js").then(function(currentLanguage){let selectedMode=ace.require("ace/mode/"+currentMode).Mode;editor.session.setMode(new selectedMode());editor.setOptions({fontSize:Number(fontSize),wrap:wrapEnabled,showGutter:showGutter,showLineNumbers:lineNumberEnabled,showPrintMargin:false,scrollPastEnd:true});});import("https://unpkg.com/ace-builds@1.4.8/src-min-noconflict/theme-"+selectedTheme+".js").then(function(currentTheme){editor.setTheme("ace/theme/"+selectedTheme);});import('https://unpkg.com/ace-builds@1.4.8/src-min-noconflict/ext-language_tools.js').then(function(autoCompletion){ace.require('ace/ext/language_tools');editor.setOption('enableLiveAutocompletion',autoCompletionEnabled);});authorize.setSession("ideLanguageSelected",$("#languageSelect option:selected").val());}
codeTemplate=(label)=>{let templateData={"BASH":'#A Simple Hello World Program\necho "Hello World"\n\n#Getting input via STDIN\nread userInput\necho "Input provided is: $userInput"',"C":'#include <stdio.h>\nint main(void) {\n    //A Simple Hello World\n    printf("hello, world\\n");\n    \n    //Getting input via STDIN\n    int userIntInput = 0;\n    char userStringInput[100] = "";\n    scanf("%d%s", &userIntInput, &userStringInput);\n    printf("The Integer and String Input provided is: %d, %s\\n", userIntInput, userStringInput);\n    return 0;\n}',"C++":'#include <iostream>\nusing namespace std;\nint main() {\n    //A Simple Hello World Program\n    cout << "Hello World" << endl;\n    \n    //Getting input via STDIN\n    int userIntInput = 0;\n    char userStringInput[100] = "";\n    cin >> userIntInput >> userStringInput;\n    cout << "The Integer and String Input is: " << userIntInput << ", " << userStringInput << endl;\n    return 0;\n}',"C#":'public class Hello {\n    public static void Main() {\n        //A Simple Hello World Program\n        System.Console.WriteLine("hello, world");\n        \n        //Getting input via STDIN\n        string userInput = System.Console.ReadLine();\n        System.Console.WriteLine("The Input Provided is: " + userInput);\n    }\n}',"GO":'package main\n\nimport "fmt"\n\nfunc main() {\n    //A Simple Hello World Program\n    fmt.Println("hello, world")\n    \n    //Getting input via STDIN\n    var userInput string\n    fmt.Scanln(&userInput)\n    fmt.Println("The Input Provided is: " + userInput)\n}',"JAVA":'import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        //A Simple Hello World\n        System.out.println("hello, world");\n        \n        //Getting input via STDIN\n        Scanner obj = new Scanner(System.in);\n        String userInput = obj.next();\n        System.out.println("The Input Provided is: " + userInput);\n    }\n}',"JAVA 8":'import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        //A Simple Hello World\n        System.out.println("hello, world");\n        \n        //Getting input via STDIN\n        Scanner obj = new Scanner(System.in);\n        String userInput = obj.next();\n        System.out.println("The Input Provided is: " + userInput);\n    }\n}',"JAVASCRIPT":'//A Simple Hello World\nconsole.log("Hello World");\n\n\n// Getting input via STDIN\nconst readline = require("readline");\n\nconst inp = readline.createInterface({\n  input: process.stdin\n});\n\ninp.on("line", (data) => {\n  console.log(data)\n});',"OBJECTIVE C":'#import <Foundation/Foundation.h>\n\nint main(int argc, const char * argv[]) {\n    @autoreleasepool {\n        NSLog(@"Hello, World!");\n    }\n    return 0;\n}\n',"PERL":'#!/usr/bin/perl \n\n# Modules used \nuse strict; \nuse warnings; \n\n# Print function \nprint("Hello World"); \n',"PHP":'<?php\necho "Hello World!";\n?>',"PYTHON 2":'#A Simple Hello World\nprint "Hello World"\n\n#Getting input via STDIN\nuserInput = raw_input()\nprint "The Input Provided is: " + userInput',"PYTHON 3":'#A Simple Hello World\nprint("Hello World")\n\n#Getting input via STDIN\nuserInput = input()\nprint("The Input Provided is: " + userInput)',"RUBY":'#A Simple Hello World\nputs "hello, world"\n\n#Getting input via STDIN\nuserInput = gets\nputs "The Input Provided is: " + userInput',"SCALA":'object HelloWorld {\n  def main(args: Array[String]): Unit = {\n    println("Hello, world!")\n  }\n}',"BASIC":'\'A Simple Hello World Program\nPRINT "hello, world"\n\n\'Getting input via STDIN\nDim userInput As String\nINPUT userInput\nPRINT "Input Provided is "; userInput',"CLOJURE":';A Simple Hello World Program\n(println "hello, world")\n\n;Getting input via STDIN\n(def userInput (read-line))\n(println "The Input Provided is: "userInput)',"CRYSTAL":'#A Simple Hello World\nputs "hello, world"\n\n#Getting input via STDIN\nuserInput = gets\nputs "The Input Provided is: #{userInput}"',"ELIXIR":'#A Simple Hello World\nIO.puts "hello, world"\n\n#Getting input via STDIN\nuserInput = IO.read(:stdio, :line)\nIO.puts "The Input provided is: " <> userInput\n',"ERLANG":'main(_) ->\n    %% A Simple Hello World\n    io:fwrite("hello, world\\n").\n    \n    %% Getting input via STDIN. Uncomment the below code to use it.\n    %% {ok, [UserInput]} = io:fread("", "~s"),\n    %% io:fwrite("The Input Provided is: ~s", [UserInput]).',"HASKELL":'main = do\n    -- A Simple Hello World\n    putStrLn "Hello World"\n    \n    -- Getting input from STDIN\n    userInput <- getLine\n    putStrLn ("The Input provided is: " ++ userInput)  ',"INSECT":'2 min + 30 s',"OCAML":'(* A Simple Hello World *)\nprint_endline "hello, world";\n\n(* Getting input via STDIN *)\nlet n = read_line () in\nprint_string "The Input Provided is: ";\nprint_string n;',"OCTAVE":'%A Simple Hello World\nprintf("hello, world\\n");\n\n%Getting input via STDIN\nx = scanf(\'%s\', [1]);\nprintf("The Input Provided is: %s", x);',"PASCAL":"program Hello;\nvar userInput: string;\nbegin\n    // A Simple Hello World\n    writeln ('hello, world');\n    \n    //Getting Input Via STDIN\n    readln(userInput);\n    writeln('The Input Provide is: ', userInput)\nend.","RUST":'fn main() {\n    //A Simple Hello World\n    println!("hello, world");\n    \n    //Getting input via STDIN\n    let mut userInput = String::new();\n    std::io::stdin().read_line(&mut userInput).unwrap();\n    println!("The Input Provided is: {}", userInput);\n}'}
return templateData[label]?templateData[label]:"";}
isMobile(){if(window.innerWidth<=768){return true;}
return false;}
renderCustomCompilation(responseData){let data=responseData.compilationDetails;let runCount=responseData.runCount;let compilerData='';let output=data.output?data.output:"Nil";let executionTime=data.executionTime?data.executionTime:"Nil";let memory=data.memory?data.memory:"Nil";compilerData+="<h5>Output: </h5>";compilerData+="<div><pre>"+output+"</pre><h5>Execution Time:</h5><pre>"+executionTime+"</pre><h5>Memory Used: </h5><pre>"+memory+"</pre></div>";$(".outputValue").html(compilerData);this.isMobile()?$("#input-tab-mobile").trigger("click"):$("#output-tab").trigger("click");}
insertTemplate(){let languageLabel=$("#languageSelect option:selected").text()
editor.setValue(this.codeTemplate(languageLabel));authorize.setSession("ideInteracted","false");$("#editorSettingModal, #switchTemplatePrompt").modal("hide");}}
function langDetect()
{languageToCompilerMaper={"python3":["web_exec_py3.py"],"ruby":["web_exec_ruby.py","exec_ruby_jsonp"],"javascript":["web_exec_js.py","exec_js_jsonp"],}
let language=$("#languageSelect").val();if(languageToCompilerMaper[language])
{document.getElementById('runDebugger').style.visibility='visible';}
else
{document.getElementById('runDebugger').style.visibility='hidden';}}
$(document).ready(function(){authorize.loginCheck();editor=ace.edit('editor');$('[data-toggle="tooltip"]').tooltip();Split(['#one','#two'],{minSize:300,onDrag:function(event){editor.resize();}});let ideObj=new Ide();let previousLanguage=authorize.getSession("ideLanguageSelected");let previousCode=authorize.getSession("ideSourceCode");ideObj.renderComplierLanguages((previousLanguage&&previousLanguage!=="")?previousLanguage:false);ideObj.updateSettings();langDetect();$(".spinner").hide();if(previousLanguage&&previousLanguage!==""){$("#languageSelect").val(previousLanguage);}
if(previousCode&&previousCode!==""){editor.setValue(previousCode);}
else{let languageLabel=$("#languageSelect option:selected").text()
editor.setValue(ideObj.codeTemplate(languageLabel));}
editor.on("change",function(event){authorize.setSession("ideSourceCode",editor.getValue());authorize.setSession("ideInteracted",true);});});function detectInput(str){if(str.includes("input(")){return true}
else if(str.includes("cin >>")){return true}
else if(str.includes("scanf(")){return true}
else if(str.includes("Scanner(")){return true}
else if(str.includes("raw_input(")){return true}
else if(str.includes("input(")){return true}
else if(str.includes("gets")){return true}
else if(str.includes("readline(")){return true}}
$('select').on('change',function(e){langDetect();});$(document).on("click","#runDebugger",function(){$("#debuggerDiv").html(`<div class="d-flex justify-content-center">
	<img height="300px" width="450px"  src="https://static.demilked.com/wp-content/uploads/2016/06/gif-animations-replace-loading-screen-14.gif"></div>
	<div class="progress">
	<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
	</div>
	<p>Loading Might take some time to stimulate Please hold on !</p>
	<p class="is-invalid">Note : Using Long recursion may take so long</p>`)
languageToCompilerMaper={"python3":["web_exec_py3.py"],"ruby":["web_exec_ruby.py","exec_ruby_jsonp"],"javascript":["web_exec_js.py","exec_js_jsonp"],}
let sourceStr=encodeURIComponent(editor.getValue());if(detectInput(sourceStr)){$("#inputDetected").modal("show");document.getElementById("debuggerModalClose").click();}
else{let language=$("#languageSelect").val();if(languageToCompilerMaper[language]){$("#debuggerModal").modal("show");if(language=="python3"||language=="python3"){language=$("#languageSelect").val();let sourceCode=encodeURIComponent(editor.getValue());console.log(sourceCode)
let trace='';$.ajax({xhr:function(){var xhr=new window.XMLHttpRequest();xhr.upload.addEventListener("progress",function(evt){if(evt.lengthComputable){var percentComplete=evt.loaded/evt.total;$('.progress-bar').css('width',percentComplete*100+'%').attr('aria-valuenow',percentComplete*100);console.log(percentComplete);}},false);xhr.addEventListener("progress",function(evt){if(evt.lengthComputable){var percentComplete=evt.loaded/evt.total;$('.progress-bar').css('width',percentComplete*100+'%').attr('aria-valuenow',percentComplete*100);}},false);return xhr;},type:'GET',"url":`https://debugger.guvi.in/${languageToCompilerMaper[language][0]}?
					user_script=${sourceCode}
					&raw_input_json=&options_json={\"cumulative_mode\":true,\"heap_primitives\":true,\"show_only_outputs\":false,\"origin\":\"opt-frontend.js\"}
					&user_uuid=&session_uuid=&diffs_json=`,"timeout":0,success:function(response){console.log(JSON.parse(response));trace=JSON.parse(response);addVisualizerToPage(trace,'debuggerDiv',{startingInstruction:2,hideCode:false});redrawAllVisualizerArrows()}});}
else{language=$("#languageSelect").val();console.log(language)
let sourceCode=encodeURIComponent(editor.getValue());$.ajax({xhr:function(){var xhr=new window.XMLHttpRequest();xhr.upload.addEventListener("progress",function(evt){if(evt.lengthComputable){var percentComplete=evt.loaded/evt.total;$('.progress-bar').css('width',percentComplete*100+'%').attr('aria-valuenow',percentComplete*100);console.log(percentComplete);}},false);xhr.addEventListener("progress",function(evt){if(evt.lengthComputable){var percentComplete=evt.loaded/evt.total;$('.progress-bar').css('width',percentComplete*100+'%').attr('aria-valuenow',percentComplete*100);console.log(percentComplete);}},false);return xhr;},type:'GET',"url":`https://debugger.guvi.in/web_exec.py?
					user_script=${sourceCode}
					&raw_input_json=&options_json={\"cumulative_mode\":true,\"heap_primitives\":true,\"show_only_outputs\":false,\"origin\":\"opt-frontend.js\"}
					&user_uuid=&session_uuid=&diffs_json=&type=${languageToCompilerMaper[language][1]}`,"timeout":0,success:function(response){console.log(JSON.parse(response));trace=JSON.parse(response);addVisualizerToPage(trace,'debuggerDiv',{startingInstruction:2,hideCode:false});redrawAllVisualizerArrows()}});}}else{$("#unsupported").modal("show");document.getElementById("debuggerModalClose").click();}}});$(document).on("input","#languageSelect, #editor-font-size, #themeControl, #autoCompletion, #showGutter, #codeWrap, #lineNumber",function(){let ideObj=new Ide();ideObj.updateSettings();if($(this)[0].id=="languageSelect"){if(authorize.getSession("ideInteracted")=="true"){$("#switchTemplatePrompt").modal({backdrop:"static",keyboard:false});}
else{ideObj.insertTemplate();}}});$(document).on("click","#insertTemplate, #dontKeepChanges",function(){let ideObj=new Ide();ideObj.insertTemplate();});$(window).on("resize",function(){if(window.innerWidth>768&&$("#resultTabMobile .active").text()!=="EDITOR"){$("#editor-tab-mobile").trigger("click");}});$(document).on("click",".share-link",function(){$("#editorSettingModal").modal("hide");authorize.share_modal();});$(document).on("click","#runCode",function(){let ideObj=new Ide();let sourceCode=editor.getValue();let input=ideObj.isMobile()?$("#inputValue-mobile").val():$("#inputValue").val();let languageLabel=$("#languageSelect option:selected").text();if(sourceCode&&sourceCode!==""){$(".spinner").show();$("#runCode").attr("disabled",true);grecaptcha.execute('6LdADb4UAAAAAA1feb36sozffPYRKKOqD9WPbibp',{action:'runCode'}).then(function(token){authorize.ajax({source:sourceCode,user_input:input,compilerId:ideObj.getCompilerId(languageLabel),token:token},"idePoint",function(data){$("#runCode").attr("disabled",false);data=JSON.parse(data);if(data.status=="success"){ideObj.renderCustomCompilation(data);}
else{$("#reloadModal").modal({show:true,backdrop:"static"});}});ga('send',{hitType:'event',eventCategory:'IDE',eventAction:'runCode',eventLabel:languageLabel+" - Run"});});}});$(document).on("click","#reloadPage",function(){window.location.reload();});$(document).on("click","#keepChanges",function(){$("#switchTemplatePrompt").modal("hide");});